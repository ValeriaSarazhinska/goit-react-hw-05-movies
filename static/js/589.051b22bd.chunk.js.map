{"version":3,"file":"static/js/589.051b22bd.chunk.js","mappings":"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","sources":["Api/Api.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetailsInfo.jsx","pages/MovieDetails/MovieDetailsAdditionalInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst key = 'b5c9f17b4578fb7f9b4d9d1272c464ac';\nconst URL = `https://api.themoviedb.org/3`;\nconst notFoundImageUrl = 'https://cdn-icons-png.flaticon.com/512/25/25634.png';\nexport const getPopularMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/day?api_key=${key}&page=${1}`\n    );\n    const { results } = response.data;\n    const films = results.map(film => {\n      const { title, id, overview } = film;\n      return { title, id, overview };\n    });\n    return { films };\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst getPosterSrc = url =>\n  url ? 'https://image.tmdb.org/t/p/w500' + url : notFoundImageUrl;\n\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(`${URL}/movie/${id}?api_key=${key}`);\n    const {\n      poster_path,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    } = response.data;\n    return {\n      poster_path: getPosterSrc(poster_path),\n      title,\n      release_date,\n      overview,\n      genres:\n        genres &&\n        genres\n          .map(({ name }) => {\n            return name;\n          })\n          .join(' '),\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/credits?api_key=${key}`\n    );\n\n    return data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path: getPosterSrc(profile_path),\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return data.results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieDetails_img__uOAom\",\"title\":\"MovieDetails_title__cUGs9\",\"container\":\"MovieDetails_container__Ys+c9\",\"button\":\"MovieDetails_button__uXZxd\",\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"infoList\":\"MovieDetails_infoList__KylaC\",\"infoItem\":\"MovieDetails_infoItem__bqSRP\",\"infoText\":\"MovieDetails_infoText__N+-q+\",\"infoName\":\"MovieDetails_infoName__9+xy7\",\"spanVote\":\"MovieDetails_spanVote__rcQXt\",\"spanSlash\":\"MovieDetails_spanSlash__zbQUV\",\"spanVotes\":\"MovieDetails_spanVotes__9AGPQ\",\"navLink\":\"MovieDetails_navLink__uPVwm\",\"item\":\"MovieDetails_item__mbUY+\"};","import css from './MovieDetails.module.css';\n\nconst MovieDetailsInfo = ({ movie }) => {\n  return (\n    <div className={css.container}>\n      <img className={css.img} src={movie.poster_path} alt={movie.name} />\n      <div className={css.movieDetails}>\n        <h1 className={css.title}>{movie.title}</h1>\n        <ul className={css.infoList}>\n          <li className={css.infoItem}>\n            <p className={css.infoName}>Vote / Votes</p>\n            <p className={css.infoText}>\n              <span className={css.spanVotes}>{movie.vote_average}</span>\n              <span className={css.spanSlash}> / </span>\n              <span className={css.spanVotes}>{movie.vote_count}</span>\n            </p>\n          </li>\n          <li className={css.infoItem}>\n            <p className={css.infoName}>Popularity</p>\n            <p className={css.infoText}>{movie.popularity}</p>\n          </li>\n\n          <li className={css.infoItem}>\n            <p className={css.infoName}>Original Title</p>\n            <p className={css.infoText}>{movie.original_title}</p>\n          </li>\n\n          <li className={css.infoItem}>\n            <p className={css.infoName}>Genre</p>\n            <p className={css.infoText}>{movie.genres}</p>\n          </li>\n        </ul>\n        <p className={css.infoName}>Overview</p>\n        <p>{movie.overview}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsInfo;\n","import css from './MovieDetails.module.css';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLink = styled(NavLink)`\n  &.active {\n    color: orangered;\n  }\n`;\n\nconst MovieDetailsAdditionalInfo = ({ backLinkHref }) => {\n  return (\n    <ul className={css.item}>\n      <li>\n        <StyledLink\n          className={css.navLink}\n          to=\"cast\"\n          state={{ from: backLinkHref }}\n        >\n          Cast\n        </StyledLink>\n      </li>\n      <li>\n        <StyledLink\n          className={css.navLink}\n          to=\"reviews\"\n          state={{ from: backLinkHref }}\n        >\n          Reviews\n        </StyledLink>\n      </li>\n    </ul>\n  );\n};\nexport default MovieDetailsAdditionalInfo;\n","import { useEffect, useState } from 'react';\nimport { getMoviesById } from '../../Api/Api';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport Loader from '../../components/Loader/Loader';\nimport MovieDetailsInfo from './MovieDetailsInfo';\nimport MovieDetailsAdditionalInfo from './MovieDetailsAdditionalInfo';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  console.log(movieId);\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchDataId = async () => {\n      try {\n        const film = await getMoviesById(movieId);\n        setMovie(film);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDataId();\n  }, [movieId]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div>\n          <Link className={css.button} to={backLinkHref}>\n            &#8592; Go back\n          </Link>\n          <MovieDetailsInfo movie={movie} />\n          <MovieDetailsAdditionalInfo backLinkHref={backLinkHref} />\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["key","URL","getPopularMovies","axios","response","results","data","films","map","film","title","id","overview","console","log","getPosterSrc","url","getMoviesById","poster_path","release_date","genres","vote_average","vote_count","popularity","original_title","name","join","getMoviesCast","cast","character","profile_path","getMovieByQuery","query","getMovieByReviews","author","content","movie","className","css","src","alt","StyledLink","styled","NavLink","backLinkHref","to","state","from","movieId","useParams","useState","setMovie","location","useLocation","loading","setLoading","useEffect","fetchDataId","Loader"],"sourceRoot":""}