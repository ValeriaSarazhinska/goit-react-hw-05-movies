{"version":3,"file":"static/js/76.d79a9eaa.chunk.js","mappings":"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","sources":["components/Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst key = 'b5c9f17b4578fb7f9b4d9d1272c464ac';\nconst URL = `https://api.themoviedb.org/3`;\n\nexport const getPopularMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/day?api_key=${key}&page=${1}`\n    );\n    const { results } = response.data;\n    const films = results.map(film => {\n      const { title, id, overview } = film;\n      return { title, id, overview };\n    });\n    return { films };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(`${URL}/movie/${id}?api_key=${key}`);\n    const {\n      poster_path,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    } = response.data;\n    return {\n      poster_path,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/credits?api_key=${key}`\n    );\n\n    return data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return data.results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\",\"list\":\"Cast_list__GlWio\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMoviesCast } from '../Api/Api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchDataCast = async () => {\n      try {\n        const cast = await getMoviesCast(movieId);\n        console.log(cast);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDataCast();\n  });\n\n  return (\n    <ul className={css.list}>\n      {cast.map(({ id, name, character, profile_path }) => {\n        return (\n          <li key={id}>\n            <img\n              className={css.img}\n              src={'https://image.tmdb.org/t/p/w500' + profile_path}\n              alt={name}\n            />\n            <h2>{name}</h2>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default Cast;\n"],"names":["key","URL","getPopularMovies","axios","response","results","data","films","map","film","title","id","overview","console","log","getMoviesById","poster_path","release_date","genres","vote_average","vote_count","popularity","original_title","getMoviesCast","cast","name","character","profile_path","getMovieByQuery","query","getMovieByReviews","author","content","movieId","useParams","useState","setCast","useEffect","fetchDataCast","className","css","src","alt"],"sourceRoot":""}