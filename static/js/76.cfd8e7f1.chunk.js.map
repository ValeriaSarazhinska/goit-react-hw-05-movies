{"version":3,"file":"static/js/76.cfd8e7f1.chunk.js","mappings":"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","sources":["Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst key = 'b5c9f17b4578fb7f9b4d9d1272c464ac';\nconst URL = `https://api.themoviedb.org/3`;\nconst notFoundImageUrl = 'https://cdn-icons-png.flaticon.com/512/25/25634.png';\nexport const getPopularMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/day?api_key=${key}&page=${1}`\n    );\n    const { results } = response.data;\n    const films = results.map(film => {\n      const { title, id, overview } = film;\n      return { title, id, overview };\n    });\n    return { films };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(`${URL}/movie/${id}?api_key=${key}`);\n    const {\n      poster_path,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    } = response.data;\n    return {\n      poster_path: poster_path\n        ? 'https://image.tmdb.org/t/p/w500' + poster_path\n        : notFoundImageUrl,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/credits?api_key=${key}`\n    );\n\n    return data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path: profile_path\n        ? 'https://image.tmdb.org/t/p/w500' + profile_path\n        : notFoundImageUrl,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return data.results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\",\"list\":\"Cast_list__GlWio\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMoviesCast } from '../../Api/Api';\nimport css from './Cast.module.css';\nimport Loader from '../Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchDataCast = async () => {\n      try {\n        const cast = await getMoviesCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDataCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <ul className={css.list}>\n          {cast.map(({ id, name, character, profile_path }) => {\n            return (\n              <li key={id}>\n                <img className={css.img} src={profile_path} alt={name} />\n                <h2>{name}</h2>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Cast;\n"],"names":["key","URL","notFoundImageUrl","getPopularMovies","axios","response","results","data","films","map","film","title","id","overview","console","log","getMoviesById","poster_path","release_date","genres","vote_average","vote_count","popularity","original_title","getMoviesCast","cast","name","character","profile_path","getMovieByQuery","query","getMovieByReviews","author","content","movieId","useParams","useState","setCast","loading","setLoading","useEffect","fetchDataCast","Loader","className","css","src","alt"],"sourceRoot":""}