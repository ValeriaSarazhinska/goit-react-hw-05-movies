{"version":3,"file":"static/js/888.b8cc55b9.chunk.js","mappings":"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","sources":["components/Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst key = 'b5c9f17b4578fb7f9b4d9d1272c464ac';\nconst URL = `https://api.themoviedb.org/3`;\n\nexport const getPopularMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/day?api_key=${key}&page=${1}`\n    );\n    const { results } = response.data;\n    const films = results.map(film => {\n      const { title, id, overview } = film;\n      return { title, id, overview };\n    });\n    return { films };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(`${URL}/movie/${id}?api_key=${key}`);\n    const {\n      poster_path,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    } = response.data;\n    return {\n      poster_path,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/credits?api_key=${key}`\n    );\n\n    return data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return data.results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieDetails_img__D3WH9\",\"title\":\"MovieDetails_title__RBndM\",\"container\":\"MovieDetails_container__o8VqJ\",\"button\":\"MovieDetails_button__PGjyO\",\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"infoList\":\"MovieDetails_infoList__HOFU-\",\"infoItem\":\"MovieDetails_infoItem__Ycqi2\",\"infoText\":\"MovieDetails_infoText__NA9FO\",\"infoName\":\"MovieDetails_infoName__WuyYT\",\"spanVote\":\"MovieDetails_spanVote__YkBIX\",\"spanSlash\":\"MovieDetails_spanSlash__qdZMn\",\"spanVotes\":\"MovieDetails_spanVotes__6G2iC\",\"navLink\":\"MovieDetails_navLink__rUGTm\",\"item\":\"MovieDetails_item__9ATw3\"};","import { useEffect, useState } from 'react';\nimport { getMoviesById } from '../Api/Api';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  &.active {\n    color: orangered;\n  }\n`;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchDataId = async () => {\n      try {\n        const film = await getMoviesById(movieId);\n        setMovie(film);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDataId();\n  });\n\n  const GoBack = () => {\n    navigate(location + '/');\n  };\n  return (\n    <>\n      <div className={css.container}>\n        <button className={css.button} onClick={GoBack}>\n          Go back &#8592;\n        </button>\n        <img\n          className={css.img}\n          src={'https://image.tmdb.org/t/p/w500' + movie.poster_path}\n          alt={movie.name}\n        />\n        <div className={css.movieDetails}>\n          <h1 className={css.title}>{movie.title}</h1>\n          <ul className={css.infoList}>\n            <li className={css.infoItem}>\n              <p className={css.infoName}>Vote / Votes</p>\n              <p className={css.infoText}>\n                <span className={css.spanVotes}>{movie.vote_average}</span>\n                <span className={css.spanSlash}> / </span>\n                <span className={css.spanVotes}>{movie.vote_count}</span>\n              </p>\n            </li>\n\n            <li className={css.infoItem}>\n              <p className={css.infoName}>Popularity</p>\n              <p className={css.infoText}>{movie.popularity}</p>\n            </li>\n\n            <li className={css.infoItem}>\n              <p className={css.infoName}>Original Title</p>\n              <p className={css.infoText}>{movie.original_title}</p>\n            </li>\n\n            <li className={css.infoItem}>\n              <p className={css.infoName}>Genre</p>\n              <p className={css.infoText}>\n                Genres\n                {movie.genres &&\n                  movie.genres.map(({ name }) => {\n                    return name;\n                  })}\n              </p>\n            </li>\n          </ul>\n          <p className={css.infoName}>Overview</p>\n          <p>{movie.overview}</p>\n        </div>\n      </div>\n      <ul className={css.item}>\n        <li>\n          <StyledLink className={css.navLink} to=\"cast\">\n            Cast\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink className={css.navLink} to=\"reviews\">\n            Reviews\n          </StyledLink>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["key","URL","getPopularMovies","axios","response","results","data","films","map","film","title","id","overview","console","log","getMoviesById","poster_path","release_date","genres","vote_average","vote_count","popularity","original_title","getMoviesCast","cast","name","character","profile_path","getMovieByQuery","query","getMovieByReviews","author","content","StyledLink","styled","NavLink","movieId","useParams","useState","movie","setMovie","location","useLocation","navigate","useNavigate","useEffect","fetchDataId","className","css","onClick","src","alt","to"],"sourceRoot":""}