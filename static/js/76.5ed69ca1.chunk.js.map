{"version":3,"file":"static/js/76.5ed69ca1.chunk.js","mappings":"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","sources":["Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst key = 'b5c9f17b4578fb7f9b4d9d1272c464ac';\nconst URL = `https://api.themoviedb.org/3`;\nconst notFoundImageUrl = 'https://cdn-icons-png.flaticon.com/512/25/25634.png';\nexport const getPopularMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/day?api_key=${key}&page=${1}`\n    );\n    const { results } = response.data;\n    const films = results.map(film => {\n      const { title, id, overview } = film;\n      return { title, id, overview };\n    });\n    return { films };\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst getPosterSrc = url =>\n  url ? 'https://image.tmdb.org/t/p/w500' + url : notFoundImageUrl;\n\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(`${URL}/movie/${id}?api_key=${key}`);\n    const {\n      poster_path,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    } = response.data;\n    return {\n      poster_path: getPosterSrc(poster_path),\n      title,\n      release_date,\n      overview,\n      genres:\n        genres &&\n        genres\n          .map(({ name }) => {\n            return name;\n          })\n          .join(' '),\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/credits?api_key=${key}`\n    );\n\n    return data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path: getPosterSrc(profile_path),\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return data.results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\",\"list\":\"Cast_list__GlWio\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMoviesCast } from '../../Api/Api';\nimport css from './Cast.module.css';\nimport Loader from '../Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchDataCast = async () => {\n      try {\n        const cast = await getMoviesCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDataCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <ul className={css.list}>\n          {cast.map(({ id, name, character, profile_path }) => {\n            return (\n              <li key={id}>\n                <img className={css.img} src={profile_path} alt={name} />\n                <h2>{name}</h2>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Cast;\n"],"names":["key","URL","getPopularMovies","axios","response","results","data","films","map","film","title","id","overview","console","log","getPosterSrc","url","getMoviesById","poster_path","release_date","genres","vote_average","vote_count","popularity","original_title","name","join","getMoviesCast","cast","character","profile_path","getMovieByQuery","query","getMovieByReviews","author","content","movieId","useParams","useState","setCast","loading","setLoading","useEffect","fetchDataCast","Loader","className","css","src","alt"],"sourceRoot":""}